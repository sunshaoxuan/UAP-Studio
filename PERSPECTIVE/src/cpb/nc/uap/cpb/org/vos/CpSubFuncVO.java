/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product. It is based on Velocity.     *
\***************************************************************/
package nc.uap.cpb.org.vos;
	
import nc.vo.pub.IVOMeta;
import nc.vo.pub.SuperVO;

import org.apache.commons.lang.StringUtils;

/**
 * <b> 在此处简要描述此类的功能 </b>
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 * 创建日期:
 * @author 
 * @version NCPrj ??
 */
@SuppressWarnings("serial")
public class CpSubFuncVO extends SuperVO {
	private java.lang.String pk_appsnode;
	private java.lang.String pk_subfunc;
	private java.lang.String name;
	private java.lang.String name2;
	private java.lang.String name3;
	private java.lang.String name4;
	private java.lang.String name5;
	private java.lang.String name6;
	private java.lang.String code;
	private java.lang.String lfwwindowid;
	private java.lang.String lfwviewid;
	private java.lang.String original;
	private java.lang.Integer dr = 0;
	private nc.vo.pub.lang.UFDateTime ts;

	public static final String PK_APPSNODE = "pk_appsnode";
	public static final String PK_SUBFUNC = "pk_subfunc";
	public static final String NAME = "name";
	public static final String NAME2 = "name2";
	public static final String NAME3 = "name3";
	public static final String NAME4 = "name4";
	public static final String NAME5 = "name5";
	public static final String NAME6 = "name6";
	public static final String CODE = "code";
	public static final String LFWWINDOWID = "lfwwindowid";
	public static final String LFWVIEWID = "lfwviewid";
	public static final String ORIGINAL = "original";
			
	public static final String ORIGINAL_MENU = "CpMenuItem";
	
	/**
	 * 属性pk_appsnode的Getter方法.属性名：parentPK
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getPk_appsnode () {
		return pk_appsnode;
	}   
	/**
	 * 属性pk_appsnode的Setter方法.属性名：parentPK
	 * 创建日期:
	 * @param newPk_appsnode java.lang.String
	 */
	public void setPk_appsnode (java.lang.String newPk_appsnode ) {
	 	this.pk_appsnode = newPk_appsnode;
	} 	  
	/**
	 * 属性pk_subfunc的Getter方法.属性名：子功能主键
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getPk_subfunc () {
		return pk_subfunc;
	}   
	public java.lang.String getName2() {
		return name2;
	}
	public void setName2(java.lang.String name2) {
		this.name2 = name2;
	}
	public java.lang.String getName3() {
		return name3;
	}
	public void setName3(java.lang.String name3) {
		this.name3 = name3;
	}
	public java.lang.String getName4() {
		return name4;
	}
	public void setName4(java.lang.String name4) {
		this.name4 = name4;
	}
	public java.lang.String getName5() {
		return name5;
	}
	public void setName5(java.lang.String name5) {
		this.name5 = name5;
	}
	public java.lang.String getName6() {
		return name6;
	}
	public void setName6(java.lang.String name6) {
		this.name6 = name6;
	}
	/**
	 * 属性pk_subfunc的Setter方法.属性名：子功能主键
	 * 创建日期:
	 * @param newPk_subfunc java.lang.String
	 */
	public void setPk_subfunc (java.lang.String newPk_subfunc ) {
	 	this.pk_subfunc = newPk_subfunc;
	} 	  
	/**
	 * 属性name的Getter方法.属性名：$map.displayName
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getName () {
		return name;
	}   
	/**
	 * 属性name的Setter方法.属性名：$map.displayName
	 * 创建日期:
	 * @param newName java.lang.String
	 */
	public void setName (java.lang.String newName ) {
	 	this.name = newName;
	} 	  	  
	/**
	 * 属性code的Getter方法.属性名：子功能编码
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getCode () {
		return code;
	}   
	/**
	 * 属性code的Setter方法.属性名：子功能编码
	 * 创建日期:
	 * @param newCode java.lang.String
	 */
	public void setCode (java.lang.String newCode ) {
	 	this.code = newCode;
	} 	  
	/**
	 * 属性lfwwindowid的Getter方法.属性名：子功能页面编码
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getLfwwindowid () {
		return lfwwindowid;
	}   
	/**
	 * 属性lfwwindowid的Setter方法.属性名：子功能页面编码
	 * 创建日期:
	 * @param newLfwwindowid java.lang.String
	 */
	public void setLfwwindowid (java.lang.String newLfwwindowid ) {
	 	this.lfwwindowid = newLfwwindowid;
	} 	  
	/**
	 * 属性lfwviewid的Getter方法.属性名：子功能窗口编码
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getLfwviewid () {
		return lfwviewid;
	}   
	/**
	 * 属性lfwviewid的Setter方法.属性名：子功能窗口编码
	 * 创建日期:
	 * @param newLfwviewid java.lang.String
	 */
	public void setLfwviewid (java.lang.String newLfwviewid ) {
	 	this.lfwviewid = newLfwviewid;
	} 	  
	/**
	 * 属性original的Getter方法.属性名：子功能来源
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getOriginal () {
		return original;
	}   
	/**
	 * 属性original的Setter方法.属性名：子功能来源
	 * 创建日期:
	 * @param newOriginal java.lang.String
	 */
	public void setOriginal (java.lang.String newOriginal ) {
	 	this.original = newOriginal;
	} 	  
	/**
	 * 属性dr的Getter方法.属性名：dr
	 * 创建日期:
	 * @return java.lang.Integer
	 */
	public java.lang.Integer getDr () {
		return dr;
	}   
	/**
	 * 属性dr的Setter方法.属性名：dr
	 * 创建日期:
	 * @param newDr java.lang.Integer
	 */
	public void setDr (java.lang.Integer newDr ) {
	 	this.dr = newDr;
	} 	  
	/**
	 * 属性ts的Getter方法.属性名：ts
	 * 创建日期:
	 * @return nc.vo.pub.lang.UFDateTime
	 */
	public nc.vo.pub.lang.UFDateTime getTs () {
		return ts;
	}   
	/**
	 * 属性ts的Setter方法.属性名：ts
	 * 创建日期:
	 * @param newTs nc.vo.pub.lang.UFDateTime
	 */
	public void setTs (nc.vo.pub.lang.UFDateTime newTs ) {
	 	this.ts = newTs;
	} 	  
 
	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
		return "pk_appsnode";
	}   
    
	/**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	  return "pk_subfunc";
	}
    
	/**
	 * <p>返回表名称.
	 * <p>
	 * 创建日期:
	 * @return java.lang.String
	 */
	public java.lang.String getTableName() {
		return "cp_subfunc";
	}    
	
	/**
	 * <p>返回表名称.
	 * <p>
	 * 创建日期:
	 * @return java.lang.String
	 */
	public static java.lang.String getDefaultTableName() {
		return "cp_subfunc";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:
	  */
     public CpSubFuncVO() {
		super();	
	}    
	
//	@nc.vo.annotation.MDEntityInfo(beanFullclassName =  "nc.uap.cpb.org.vos.CpSubFuncVO" )
	public IVOMeta getMetaData() {
   		return null;
  	}
	
	@Override
	public boolean equals(Object subFucVO){
		boolean isEqual = false;
		if(subFucVO instanceof CpSubFuncVO){
			String pk_appsnode = ((CpSubFuncVO) subFucVO).getPk_appsnode();
			String lfwWindowId = ((CpSubFuncVO) subFucVO).getLfwwindowid();
			String lfwWiewId = ((CpSubFuncVO) subFucVO).getLfwviewid();
			String code = ((CpSubFuncVO) subFucVO).getCode();
			if(this.code != null && this.code.equals(code))
				if(this.lfwviewid != null && this.lfwviewid.equals(lfwWiewId))
					if(this.lfwwindowid != null && this.lfwwindowid.equals(lfwWindowId))
						if(this.pk_appsnode != null && this.pk_appsnode.equals(pk_appsnode))
							isEqual = true;
		}
		return isEqual;
	}
	public int hashCode() {
		if(StringUtils.isBlank(this.getPk_appsnode()))
			return -1;
		int value = 0;
		value+=Integer.valueOf(this.getPk_appsnode());
		if(!StringUtils.isBlank(this.getLfwwindowid()))
			value += Integer.valueOf(this.getLfwwindowid())* Math.pow(10, Double.valueOf(this.getLfwwindowid())+1);
		if(!StringUtils.isBlank(this.getLfwviewid()))
			value += Integer.valueOf(this.getLfwviewid())* Math.pow(10, Double.valueOf(this.getLfwviewid())+1);
		if(!StringUtils.isBlank(this.getCode()))
			value += Integer.valueOf(this.getCode())* Math.pow(10, Double.valueOf(this.getCode())+1);
		
		return value;
	  }
} 


